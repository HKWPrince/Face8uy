//
//  SecondViewController.swift
//  Example2
//
//  Created by apple on 2020/8/27.
//  Copyright © 2020 apple. All rights reserved.
//

import UIKit
import Charts
class AgeAnalysisViewController: UIViewController, ChartViewDelegate{

    var barChart = BarChartView()
    override func viewDidLoad() {
        super.viewDidLoad()
        barChart.delegate = self

        
    }
    override func viewDidLayoutSubviews() {
           super.viewDidLayoutSubviews()

           barChart.frame = CGRect(x: 0, y: 0, width: self.view.frame.size.width, height: self.view.frame.size.width)
           barChart.center = view.center
           view.addSubview(barChart)
        var age = [Int]()
        age.append(contentsOf: [5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,3462,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,3462,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,29,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,46,26,34,62,67,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,46,26,3462,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,29,11,16,13,18,19,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,11,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,6,9,4,3,2,16,56,21,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,6,9,4,3,2,16,56,21,16,19,55,47,32,19,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,11,16,13,18,19,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,3462,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,10,17,16,12,6,9,4,3,2,16,56,21,55,47,32,19,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,29,11,16,13,18,19,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,69,65,43,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,11,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,11,16,13,18,19,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,11,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,39,38,7,33,39,38,7,33,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,33,66,61,25,44,77,59,44,62,11,14,18,19,50,46,26,34,62,67,69,65,43,20,8,27,56,33,29,54,57,71,52,23,30,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,29,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,11,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,40,41,42,43,44,45,46,47,48,49,40,41,42,43,44,45,46,47,48,49,40,41,42,43,44,45,46,47,48,49,60,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,40,41,42,43,44,45,46,47,48,49,60,40,41,42,43,44,45,46,47,48,49,60,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,40,41,42,43,44,45,46,47,48,49,60,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,40,41,42,43,44,45,46,47,48,49,60,40,41,42,43,44,45,46,47,48,49,50,51,52,40,41,42,43,44,45,46,47,48,49,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,3462,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,19,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,10,17,16,12,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,26,34,62,67,29,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,11,14,18,19,50,46,26,34,62,67,69,65,43,15,16,20,8,27,56,33,29,54,57,71,52,23,30,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,11,5,13,9,55,60,75,43,12,46,10,6,78,59,26,21,23,28,51,42,46,50,33,44,55,62,63,68,71,61,26,24,29,6,9,4,3,2,16,56,21,16,19,55,47,32,19,52,53,58,68,64,75,42,41,33,36,38,34,12,16,39,38,7,33,66,61,25,44,77,59,44,62,22,16,30,25,22,33,50,46,51,52,53,54,55,56,57,58,59,60,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,40,41,42,43,44,45,46,47,48,49,60,21,22,23,24,25,26,27,28,29,21,22,23,24,25,26,27,28,29,21,22,23,24,25,26,27,28,29,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39])//[]放入"年齡"內的資料
        var count1 = 0.0
        var count2 = 0.0
        var count3 = 0.0
        var count4 = 0.0
        var count5 = 0.0
        var count6 = 0.0
        var count7 = 0.0
        var count8 = 0.0
        for i in 0..<age.count{
            if age[i]<10{
                count1 += 1
            }
            else if age[i]<20{
                count2 += 1
            }
            else if age[i]<30{
                count3 += 1
            }
            else if age[i]<40{
                count4 += 1
            }
            else if age[i]<50{
                count5 += 1
            }
            else if age[i]<60{
                count6 += 1
            }
            else if age[i]<70{
                count7 += 1
            }
            else if age[i]<80{
                count8 += 1
            }
        }
        
        var value = [Double]()
        value.append(contentsOf: [count1,count2,count3,count4,count5,count6,count7,count8])
           
           
           var entries = [BarChartDataEntry]()
           
        entries.append(BarChartDataEntry(x: 5, y: value[0]/100))
        entries.append(BarChartDataEntry(x: 15, y: value[1]/100))
        entries.append(BarChartDataEntry(x: 25, y: value[2]/100))
        entries.append(BarChartDataEntry(x: 35, y: value[3]/100))
        entries.append(BarChartDataEntry(x: 45, y: value[4]/100))
        entries.append(BarChartDataEntry(x: 55, y: value[5]/100))
        entries.append(BarChartDataEntry(x: 65, y: value[6]/100))
        entries.append(BarChartDataEntry(x: 75, y: value[7]/100))
           
           
           let set = BarChartDataSet(entries: entries)
           set.colors = ChartColorTemplates.joyful()
    
           let data = BarChartData(dataSet: set)
           
           barChart.data = data
        let leftFormatter = NumberFormatter()
        leftFormatter.positiveSuffix = "千"
        barChart.leftAxis.valueFormatter = DefaultAxisValueFormatter.init(formatter: leftFormatter)
        let xFormatter = NumberFormatter()
        xFormatter.positiveSuffix = "歲"
        barChart.xAxis.valueFormatter = DefaultAxisValueFormatter.init(formatter: xFormatter)
        data.barWidth = 5
           barChart.noDataText = "You Need to Provide Data."
           barChart.legend.enabled = false
           barChart.xAxis.labelPosition = .bottom
           barChart.xAxis.axisMinimum = 0
           barChart.xAxis.axisMaximum = 80
           barChart.xAxis.labelCount=8
           barChart.rightAxis.enabled = false
           barChart.leftAxis.axisMinimum = 0
           barChart.leftAxis.drawZeroLineEnabled = true
           barChart.leftAxis.axisMaximum = 5
           barChart.leftAxis.labelCount = 5
        
       }
}

